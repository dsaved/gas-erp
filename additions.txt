SQL Additions

ALTER TABLE `omc` ADD `tin` VARCHAR(300) NOT NULL COMMENT 'tax identification number' AFTER `name`; 
ALTER TABLE `petroleum_order` ADD `order_number` VARCHAR(300) NOT NULL AFTER `volume`, ADD `transaction_id` VARCHAR(300) NOT NULL AFTER `order_number`; 
ALTER TABLE `tax_schedule_products` ADD `code` VARCHAR(300) NOT NULL AFTER `name`; 
ALTER TABLE `bdc` ADD `code` VARCHAR(300) NOT NULL AFTER `name`; 
ALTER TABLE `bdc` CHANGE `code` `code` VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL; 
ALTER TABLE `tax_schedule_products` CHANGE `code` `code` VARCHAR(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL; 
ALTER TABLE `depot` ADD `code` VARCHAR(300) NULL AFTER `name`; 
ALTER TABLE `tax_window` ADD `code` VARCHAR(200) NOT NULL AFTER `name`; 
ALTER TABLE `tax_window` CHANGE `tax_product` `tax_product` VARCHAR(200) NOT NULL; 
ALTER TABLE `petroleum_icums_declaration` ADD `product_type` VARCHAR(200) NOT NULL AFTER `date`;
ALTER TABLE `petroleum_icums_declaration` CHANGE `date` `window_code` VARCHAR(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL; 
ALTER TABLE `petroleum_icums_declaration` ADD `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `amount`; 
ALTER TABLE `omc` ADD UNIQUE( `tin`); 

CREATE TABLE `petroleum_expected_declaration` (
  `id` bigint(255) NOT NULL,
  `product_code` varchar(200) NOT NULL,
  `depot` varchar(200) NOT NULL,
  `bdc` varchar(200) NOT NULL,
  `omc` varchar(200) NOT NULL,
  `volume` decimal(62,1) NOT NULL,
  `expected_declaration_amount` decimal(62,2) NOT NULL,
  `rate` decimal(62,12) NOT NULL,
  `window_code` varchar(200) NOT NULL,
  `date_from` date NOT NULL,
  `date_to` date NOT NULL,
  `tax` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
PARTITION BY RANGE (`id`)
(
PARTITION p0 VALUES LESS THAN (300000) ENGINE=InnoDB,
PARTITION p1 VALUES LESS THAN (600000) ENGINE=InnoDB,
PARTITION p2 VALUES LESS THAN (900000) ENGINE=InnoDB,
PARTITION p3 VALUES LESS THAN (1200000) ENGINE=InnoDB,
PARTITION p4 VALUES LESS THAN (1500000) ENGINE=InnoDB,
PARTITION p5 VALUES LESS THAN (1800000) ENGINE=InnoDB,
PARTITION p6 VALUES LESS THAN (2100000) ENGINE=InnoDB,
PARTITION p7 VALUES LESS THAN (2400000) ENGINE=InnoDB,
PARTITION p8 VALUES LESS THAN (2700000) ENGINE=InnoDB,
PARTITION p9 VALUES LESS THAN (3000000) ENGINE=InnoDB,
PARTITION p10 VALUES LESS THAN (3300000) ENGINE=InnoDB,
PARTITION p11 VALUES LESS THAN (3600000) ENGINE=InnoDB,
PARTITION p12 VALUES LESS THAN (3900000) ENGINE=InnoDB,
PARTITION p13 VALUES LESS THAN (4200000) ENGINE=InnoDB,
PARTITION p14 VALUES LESS THAN (4500000) ENGINE=InnoDB,
PARTITION p15 VALUES LESS THAN (4800000) ENGINE=InnoDB,
PARTITION p16 VALUES LESS THAN (5100000) ENGINE=InnoDB,
PARTITION p17 VALUES LESS THAN (5400000) ENGINE=InnoDB,
PARTITION p18 VALUES LESS THAN (5700000) ENGINE=InnoDB,
PARTITION p19 VALUES LESS THAN (6000000) ENGINE=InnoDB,
PARTITION p20 VALUES LESS THAN (6300000) ENGINE=InnoDB,
PARTITION p21 VALUES LESS THAN (6600000) ENGINE=InnoDB,
PARTITION p22 VALUES LESS THAN (6900000) ENGINE=InnoDB,
PARTITION p23 VALUES LESS THAN (7200000) ENGINE=InnoDB,
PARTITION p24 VALUES LESS THAN (7500000) ENGINE=InnoDB,
PARTITION p25 VALUES LESS THAN (7700000) ENGINE=InnoDB,
PARTITION p26 VALUES LESS THAN (8000000) ENGINE=InnoDB,
PARTITION p27 VALUES LESS THAN (8300000) ENGINE=InnoDB,
PARTITION p28 VALUES LESS THAN (8600000) ENGINE=InnoDB,
PARTITION p29 VALUES LESS THAN (8900000) ENGINE=InnoDB,
PARTITION p30 VALUES LESS THAN (9200000) ENGINE=InnoDB,
PARTITION p31 VALUES LESS THAN (9500000) ENGINE=InnoDB,
PARTITION p32 VALUES LESS THAN (9800000) ENGINE=InnoDB,
PARTITION p33 VALUES LESS THAN (10100000) ENGINE=InnoDB,
PARTITION p34 VALUES LESS THAN (10400000) ENGINE=InnoDB,
PARTITION p35 VALUES LESS THAN (10700000) ENGINE=InnoDB,
PARTITION p36 VALUES LESS THAN (11000000) ENGINE=InnoDB,
PARTITION p37 VALUES LESS THAN (11200000) ENGINE=InnoDB,
PARTITION p38 VALUES LESS THAN (11300000) ENGINE=InnoDB,
PARTITION p39 VALUES LESS THAN (11600000) ENGINE=InnoDB,
PARTITION p40 VALUES LESS THAN (11900000) ENGINE=InnoDB,
PARTITION p42 VALUES LESS THAN (12000000) ENGINE=InnoDB,
PARTITION p43 VALUES LESS THAN (12300000) ENGINE=InnoDB,
PARTITION p44 VALUES LESS THAN (12600000) ENGINE=InnoDB,
PARTITION p45 VALUES LESS THAN (12900000) ENGINE=InnoDB,
PARTITION p46 VALUES LESS THAN (13300000) ENGINE=InnoDB,
PARTITION p47 VALUES LESS THAN (13600000) ENGINE=InnoDB,
PARTITION p48 VALUES LESS THAN (13900000) ENGINE=InnoDB,
PARTITION p49 VALUES LESS THAN (14300000) ENGINE=InnoDB,
PARTITION p50 VALUES LESS THAN (14600000) ENGINE=InnoDB,
PARTITION p51 VALUES LESS THAN (14900000) ENGINE=InnoDB,
PARTITION p52 VALUES LESS THAN (15300000) ENGINE=InnoDB,
PARTITION p53 VALUES LESS THAN (15600000) ENGINE=InnoDB,
PARTITION p54 VALUES LESS THAN (15900000) ENGINE=InnoDB,
PARTITION p55 VALUES LESS THAN (16000000) ENGINE=InnoDB,
PARTITION p56 VALUES LESS THAN (16300000) ENGINE=InnoDB,
PARTITION p57 VALUES LESS THAN (16600000) ENGINE=InnoDB,
PARTITION p58 VALUES LESS THAN (16900000) ENGINE=InnoDB,
PARTITION p59 VALUES LESS THAN (17000000) ENGINE=InnoDB,
PARTITION p60 VALUES LESS THAN (17300000) ENGINE=InnoDB,
PARTITION p61 VALUES LESS THAN (17600000) ENGINE=InnoDB,
PARTITION p62 VALUES LESS THAN (17900000) ENGINE=InnoDB,
PARTITION p63 VALUES LESS THAN (18000000) ENGINE=InnoDB,
PARTITION p64 VALUES LESS THAN (18300000) ENGINE=InnoDB,
PARTITION p65 VALUES LESS THAN (18600000) ENGINE=InnoDB,
PARTITION p66 VALUES LESS THAN (18900000) ENGINE=InnoDB,
PARTITION p67 VALUES LESS THAN (19000000) ENGINE=InnoDB,
PARTITION p68 VALUES LESS THAN (19300000) ENGINE=InnoDB,
PARTITION p69 VALUES LESS THAN (19600000) ENGINE=InnoDB,
PARTITION p70 VALUES LESS THAN (19900000) ENGINE=InnoDB,
PARTITION p71 VALUES LESS THAN (20300000) ENGINE=InnoDB,
PARTITION p72 VALUES LESS THAN (20500000) ENGINE=InnoDB,
PARTITION p73 VALUES LESS THAN (20700000) ENGINE=InnoDB,
PARTITION p74 VALUES LESS THAN (20800000) ENGINE=InnoDB,
PARTITION p75 VALUES LESS THAN (21000000) ENGINE=InnoDB,
PARTITION p76 VALUES LESS THAN (21200000) ENGINE=InnoDB,
PARTITION p77 VALUES LESS THAN (21300000) ENGINE=InnoDB,
PARTITION p78 VALUES LESS THAN (21400000) ENGINE=InnoDB,
PARTITION p79 VALUES LESS THAN (21500000) ENGINE=InnoDB,
PARTITION p80 VALUES LESS THAN (21600000) ENGINE=InnoDB,
PARTITION p81 VALUES LESS THAN (21900000) ENGINE=InnoDB,
PARTITION p82 VALUES LESS THAN (22000000) ENGINE=InnoDB,
PARTITION p83 VALUES LESS THAN (22200000) ENGINE=InnoDB,
PARTITION p84 VALUES LESS THAN (22400000) ENGINE=InnoDB,
PARTITION p85 VALUES LESS THAN (22600000) ENGINE=InnoDB,
PARTITION p86 VALUES LESS THAN (22800000) ENGINE=InnoDB,
PARTITION p87 VALUES LESS THAN (23000000) ENGINE=InnoDB,
PARTITION p88 VALUES LESS THAN (23300000) ENGINE=InnoDB,
PARTITION p89 VALUES LESS THAN (23600000) ENGINE=InnoDB,
PARTITION p90 VALUES LESS THAN (23900000) ENGINE=InnoDB,
PARTITION p91 VALUES LESS THAN (24000000) ENGINE=InnoDB
);

ALTER TABLE `petroleum_expected_declaration`
  ADD PRIMARY KEY (`id`),
  ADD KEY `omc` (`omc`),
  ADD KEY `date_from` (`date_from`,`date_to`),
  ADD KEY `product_code` (`product_code`),
  ADD KEY `product_code_2` (`product_code`,`omc`);

ALTER TABLE `petroleum_expected_declaration`
  MODIFY `id` bigint(255) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=20249;
COMMIT;

   
DELIMITER $$
CREATE DEFINER=`root`@`localhost` FUNCTION `func_get_split_string`(`f_string` VARCHAR(1000), `f_delimiter` VARCHAR(5), `f_order` INT) RETURNS varchar(255) CHARSET utf8mb4
    NO SQL
BEGIN
 -- Get the separated number of given string.
 declare result varchar(255) default '';
 set result = reverse(substring_index(reverse(substring_index(f_string,f_delimiter,f_order)),f_delimiter,1));
 return result;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` FUNCTION `func_get_split_string_total`(`f_string` VARCHAR(1000), `f_delimiter` VARCHAR(5)) RETURNS int(11)
    NO SQL
BEGIN
 -- Get the total number of given string.
 return 1+(length(f_string) - length(replace(f_string,f_delimiter,'')));
END$$
DELIMITER ;

DROP PROCEDURE `rm_bank_reconcilation`;DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `rm_bank_reconcilation`(IN `SPIDS` TEXT)
BEGIN
  -- Get the separated string.
 declare cnt int default 0;
 declare i int default 0;
 set cnt = func_get_split_string_total(SPIDS,',');
 drop table if exists tmp_print;
 create temporary table tmp_print (num int not null);
 while i < cnt
 do
  set i = i + 1;
  insert into tmp_print(num) values (func_get_split_string(SPIDS,',',i));
 end while;
 select num into @ids from tmp_print;
Update statements set `status`='',`locked_to`=0 WHERE `account_id` IN (SELECT child_account FROM asinged_account WHERE main_account IN (@ids)) AND locked_to IN (@ids);
Update statements set `status`='' WHERE account_id IN (@ids) AND `locked_to`=0;
Update accounts set `reconciled`=0 WHERE id IN (@ids);
DELETE FROM unauthorized_transfers WHERE unauthorized_transfers.account_from IN (@ids);
DELETE FROM comments WHERE account_from IN (@ids);
DELETE FROM audits_logs WHERE audits_logs.account_id_from IN (@ids);
END$$
DELIMITER ;

CREATE TABLE `petroleum_icums_differences` ( `id` BIGINT(255) NOT NULL AUTO_INCREMENT ,  `date` VARCHAR(50) NOT NULL ,  `omc` VARCHAR(200) NOT NULL ,  `amount` DECIMAL(62,2) NOT NULL ,  `exp_declaration_amount` DECIMAL(62,2) NOT NULL ,  `difference_amount` DECIMAL(62,2) NOT NULL ,  `flagged` TINYINT(1) NOT NULL ,    PRIMARY KEY  (`id`),    INDEX  `OMC` (`omc`),    INDEX  `window_code` (`date`)) ENGINE = InnoDB;
CREATE TABLE `audits_master_db`.`petroleum_good_standing` ( `id` BIGINT(255) NOT NULL AUTO_INCREMENT , `date_from` DATE NOT NULL , `date_to` DATE NOT NULL , `omc` VARCHAR(200) NOT NULL , `amount` DECIMAL(62,2) NOT NULL , `dcl_amount_icum` DECIMAL(62,2) NOT NULL , `exp_dcl_amount` DECIMAL(62,2) NOT NULL , `difference_amount_receipt_icums` DECIMAL(62,2) NOT NULL , `difference_amount_expected_icums` DECIMAL(62,2) NOT NULL , `flagged` TINYINT(1) NOT NULL , PRIMARY KEY (`id`), INDEX `OMC` (`omc`), INDEX `date_from` (`date_from`), INDEX `date_to` (`date_to`)) ENGINE = InnoDB; 



Add Folder C:\xampp\htdocs\gas\omc-api\downloads\docs-error
Add File C:\xampp\htdocs\gas\node-server\functions\expected_declarations.js
